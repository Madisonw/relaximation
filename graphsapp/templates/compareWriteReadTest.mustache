<h1>Concurrent Writer Test</h1>

<div id="graphcontainer">
  <div id="placeholder" style="width:1000px;height:500px;"></div>
</div>

<div id="resultlist"></div>
<div id="writers">Writers :: {{writers}}</div>
<div id="writers">Readers :: {{readers}}</div>
<div id="choices">Show:</div>

<script id="source" language="javascript" type="text/javascript">
var results = JSON.parse('{{{results}}}');
var lines = {};
var rclients = {{rclients}};
var wclients = {{wclients}};
var recurrence = {{recurrence}};

function sum (values) {
  var rv = 0;
  for (var i in values) {
    rv += values[i];
  }
  return rv;
}

results.forEach(function (r) {
  rline = []  
  wline = []
  for (var p=0;p<r.results[0].results.length;p+=1) {
    var writes = []
    for (var i=0;i<r.results.length;i+=1) {
      if (r.results[i].results[p] && r.results[i].results[p].writes.clients === wclients){
        if (r.results[i].results[p].writes.last > r.results[i].results[p].writes.average) {
          w = r.results[i].results[p].writes.last
        } else {
          w = r.results[i].results[p].writes.average
        }
        writes.push(w) 
        var time = r.results[i].results[p].time
      } 
    }
    if (writes.length == recurrence) {
      wline.push([time, sum(writes) / recurrence])
    }
    
    var reads = []
    for (var i=0;i<r.results.length;i+=1) {
      if (r.results[i].results[p] && r.results[i].results[p].reads.clients === rclients){
        if (r.results[i].results[p].reads.last > r.results[i].results[p].reads.average) {
          re = r.results[i].results[p].reads.last
        } else {
          re = r.results[i].results[p].reads.average
        }
        reads.push(re) 
        var time = r.results[i].results[p].time
      }
    }  
    if (reads.length == recurrence) {
      rline.push([time, sum(reads) / recurrence])
    }
  }
  var key = r.name+' writes';
  lines[key] = {label:key, data:wline}
  var key = r.name+' reads';
  lines[key] = {label:key, data:rline}
})

var i = 0;
$.each(lines, function(key, val) { val.color = i; ++i; });
// insert checkboxes 
var choiceContainer = $("#choices");
$.each(lines, function(key, val) {
    choiceContainer.append('<br/><input type="checkbox" name="' + key +
                           '" checked="checked" id="id' + key + '">' +
                           '<label for="id' + key + '">'
                            + val.label + '</label>');
});
choiceContainer.find("input").click(plotAccordingToChoices);

function plotAccordingToChoices() {
    var data = [];
    choiceContainer.find("input:checked").each(function () {
        var key = $(this).attr("name");
        if (key && lines[key])
            data.push(lines[key]);
    });
    if (data.length > 0)
        $.plot($("#placeholder"), data, {
            yaxis: { min: 0 },
            xaxis: { tickDecimals: 0 }
        });
}
plotAccordingToChoices();
</script>